{"version":3,"sources":["../src/index.js"],"names":["express","require","path","fs","favicon","logger","cookieParser","bodyParser","session","passport","LocalStrategy","Strategy","ejwt","jwt","multer","mongo","mongoose","db","connection","userManagement","PageAccess","projectManagement","app","use","json","urlencoded","extended","req","res","next","console","log","headers","header","port","process","env","PORT","listen"],"mappings":";;AAeA;;AAfA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,KAAKF,QAAQ,IAAR,CAAX;AACA,IAAMG,UAAUH,QAAQ,eAAR,CAAhB;AACA,IAAMI,SAASJ,QAAQ,QAAR,CAAf;AACA,IAAMK,eAAeL,QAAQ,eAAR,CAArB;AACA,IAAMM,aAAaN,QAAQ,aAAR,CAAnB;AACA,IAAMO,UAAUP,QAAQ,iBAAR,CAAhB;AACA,IAAMQ,WAAWR,QAAQ,UAAR,CAAjB;AACA,IAAMS,gBAAgBT,QAAQ,gBAAR,EAA0BU,QAAhD;AACA,IAAMC,OAAOX,QAAQ,aAAR,CAAb;AACA,IAAMY,MAAMZ,QAAQ,cAAR,CAAZ;AACA,IAAMa,SAASb,QAAQ,QAAR,CAAf;AACA,IAAMc,QAAQd,QAAQ,SAAR,CAAd;AACA,IAAMe,WAAYf,QAAQ,UAAR,CAAlB;;;AAIA,IAAMgB,KAAKD,SAASE,UAApB;AACA,IAAMC,iBAAiBlB,QAAQ,8BAAR,CAAvB;AACA,IAAMmB,aAAanB,QAAQ,qCAAR,CAAnB;AACA,IAAMoB,oBAAoBpB,QAAQ,sCAAR,CAA1B;;AAEA,IAAMqB,MAAMtB,SAAZ;AACAsB,IAAIC,GAAJ,CAAQlB,OAAO,KAAP,CAAR;AACAiB,IAAIC,GAAJ,CAAQhB,WAAWiB,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQhB,WAAWkB,UAAX,CAAsB,EAACC,UAAS,KAAV,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQjB,iCAAR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAgB,IAAIC,GAAJ,CAAQ,UAAUI,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9BC,YAAQC,GAAR,CAAYJ,IAAIK,OAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACCJ,QAAIK,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAL,QAAIK,MAAJ,CAAW,8BAAX,EAA2C,GAA3C;AACDJ;AACH,CAXD;;AAaAP,IAAIC,GAAJ,CAAQ,aAAR,EAAsBJ,cAAtB;AACAG,IAAIC,GAAJ,CAAQ,OAAR,EAAgBH,UAAhB;AACAE,IAAIC,GAAJ,CAAQ,SAAR,EAAkBF,iBAAlB;;AAEA,IAAMa,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACAf,IAAIgB,MAAJ,CAAWJ,IAAX","file":"index.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst fs = require('fs');\nconst favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst session = require('express-session');\nconst passport = require('passport');\nconst LocalStrategy = require('passport-local').Strategy;\nconst ejwt = require('express-jwt');\nconst jwt = require('jsonwebtoken');\nconst multer = require('multer');\nconst mongo = require('mongodb');\nconst mongoose =  require('mongoose');\nimport {secretKey,saveUninitialized,resave,sessionKey} from './globals/DbConfig';\n\n\nconst db = mongoose.connection;\nconst userManagement = require('./routes/userManagementRoute')\nconst PageAccess = require('./routes/pageAccess/PageAccessRoute')\nconst projectManagement = require('./routes/projectRoutes/projectRoutes');\n\nconst app = express();\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:false}));\napp.use(cookieParser(secretKey));\n// app.set('trust proxy', 1) // trust first proxy\n// app.use(session({\n//   cookieName:\"gsessionID\",\n//   secret: sessionKey,\n//   resave: false,\n//   saveUninitialized: true,\n//   cookie: { secure: true },\n//   duration: 30 * 60 * 1000,\n//   activeDuration: 5 * 60 * 1000\n// }));\n// app.use(session({\n//   genid: function(req) {\n//     return genuuid() // use UUIDs for session IDs\n//   },\n//   secret: sessionKey\n// }));\napp.use(function (req, res, next) {\n    console.log(req.headers)\n    //  res.header(\"Access-Control-Allow-Origin\", \"*\");\n    //  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, x-auth-token\");\n    // res.header('Access-Control-Allow-Origin', '*');\n    // res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE');\n    // res.header('Access-Control-Allow-Headers', \"*\");\n    // res.header('Access-Control-Allow-Credentials', true);\n     res.header(\"Access-Control-Allow-Origin\", \"*\");\n     res.header(\"Access-Control-Allow-Headers\", \"*\");\n    next();\n});\n\napp.use('/usersLogin',userManagement);\napp.use('/page',PageAccess);\napp.use('/manage',projectManagement);\n\nconst port = process.env.PORT || 5000;\napp.listen(port);"]}