{"version":3,"sources":["../../src/routes/userManagementRoute.js"],"names":["express","require","User","userManagement","Router","initialLoginValidation","req","res","next","console","log","body","email","password","length","status","send","findUserByEmail","then","user","comparePassword","_id","role","signUserJwtToken","error","generateAuthToken","token","cookies","catch","err","get","post","module","exports"],"mappings":"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","file":"userManagementRoute.js","sourcesContent":["const express = require('express');\nconst {User} = require('../models/UserManagementModels')\nconst userManagement = express.Router();\n\nconst initialLoginValidation = function(req, res, next){\n    console.log(\"Validation called\")\n    if(req.body.email == \"\" || req.body.password.length>16 || req.body.password.length<8){\n        res.status(401).send(\"Not allowed\")\n    } else {\n          User.findUserByEmail(req.body.email).then((user)=>{\n          if(!user){\n               res.send({\"error\":true})\n           } else {\n              User.comparePassword(req.body.password, user.password).then((res)=>{\n                  if(!res){\n                      res.send({\"error\":true})\n                  } else {\n                      req.user = {\"error\":false,\"_id\":user._id,\"email\":user.email,\"password\":user.password,\"role\":user.role};\n                      next();\n                  }\n              }); \n           }\n      });\n    }\n}\nconst signUserJwtToken =  function(req, res, next){\n    if(!req.user.error){\n        var user = new User({\"_id\":req.user._id,\"email\":req.user.email,\"password\":req.user.password,\"role\":req.user.role});\n        user.generateAuthToken().then((token)=>{\n            req.cookies.token = token\n            req.token = token\n            next();\n        }).catch((err)=>{\n            console.log(err)\n        });\n    }else{\n        res.status(400).send({\"error\":\"something went wrong\"});\n    }\n}\n//Routes for User Management defined\nuserManagement.get('/login', (req, res, next)=>{\n    res.send(\"Hello\");\n});\n\nuserManagement.post('/login',\n         [initialLoginValidation,signUserJwtToken],\n    (req, res, next)=>{\n        res.send({\"token\":req.token,\"email\":req.user.email,\"loggedIn\":true,\"role\":req.user.role});\n});\n\nmodule.exports = userManagement;\n\n\n//$2a$10$NhmWT1PIfewk5fW0IugBR.cZLtfBBffIH3bt9foteoCTaHGF3XreK"]}