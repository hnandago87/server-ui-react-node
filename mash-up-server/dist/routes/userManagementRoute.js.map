{"version":3,"sources":["../../src/routes/userManagementRoute.js"],"names":["express","require","passport","LocalStrategy","Strategy","User","userManagement","Router","strategy","usernameField","passwordField","passReqToCallback","req","username","password","done","console","log","findUserByEmail","then","user","comparePassword","res","_id","email","role","initialLoginValidation","next","body","length","status","send","signUserJwtToken","error","generateAuthToken","token","catch","err","serializeUser","deserializeUser","use","get","post","authenticate","session","module","exports"],"mappings":"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","file":"userManagementRoute.js","sourcesContent":["const express = require('express');\nconst passport = require('passport');\nconst LocalStrategy = require('passport-local').Strategy;\nconst {User} = require('../models/UserManagementModels')\nconst userManagement = express.Router();\n\nconst strategy = new LocalStrategy({usernameField:\"email\", passwordField:\"password\",passReqToCallback: true},\n  function(req,username,password, done) {\n      console.log(\"+++++++++++++++++\")\n      console.log(username)\n      console.log(\"+++++++++++++++++\")\n      User.findUserByEmail(username).then((user)=>{\n          console.log(user)\n          if(!user){\n               return done({\"error\":true}, null)\n           } else {\n              User.comparePassword(password, user.password).then((res)=>{\n                  if(!res){\n                      return done({\"error\":true}, null)\n                  } else {\n                      return done(null, {\"error\":false,\"_id\":user._id,\"email\":user.email,\"password\":user.password,\"role\":user.role})\n                  }\n              }); \n           }\n      });\n  }\n);\nconst initialLoginValidation = function(req, res, next){\n    console.log(\"Validation called\")\n    if(req.body.email == \"\" || req.body.password.length>16 || req.body.password.length<8){\n        res.status(401).send(\"Not allowed\")\n    } else {\n        next();\n    }\n}\nconst signUserJwtToken =  function(req, res, next){\n    if(!req.user.error){\n        var user = new User({\"_id\":req.user._id,\"email\":req.user.email,\"password\":req.user.password,\"role\":req.user.role});\n        user.generateAuthToken().then((token)=>{\n            req.token = token\n            next();\n        }).catch((err)=>{\n            console.log(err)\n        });\n    }else{\n        res.status(400).send({\"error\":\"something went wrong\"});\n    }\n}\n//Everything that is done after request passed\npassport.serializeUser(function(user,done){\n    done(null,user);\n});\npassport.deserializeUser(function(user,done){\n    done(null,user);\n});\npassport.use(strategy);\n\n\n//Routes for User Management defined\nuserManagement.get('/login', (req, res, next)=>{\n    res.send(\"Hello\");\n});\n\nuserManagement.post('/login',\n        [initialLoginValidation,passport.authenticate('local',{session:false}),signUserJwtToken],\n    (req, res, next)=>{\n        res.send({\"token\":req.token,\"email\":req.user.email,\"loggedIn\":true,\"role\":req.user.role});\n});\n\nmodule.exports = userManagement;"]}