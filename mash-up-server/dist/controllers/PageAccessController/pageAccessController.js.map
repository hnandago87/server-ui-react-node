{"version":3,"sources":["../../../src/controllers/PageAccessController/pageAccessController.js"],"names":["getUserAccess","req","res","next","console","log","headers","then","decodedToken","user","callback","validateToken","findUserAccessForPage","params","page","err","result","send","token","userEmail","User","findUserByToken","email","catch","PageAccess","findPageAccessForUser"],"mappings":";;;;;QAIgBA,a,GAAAA,a;;AAJhB;;;;AACA;;AACA;;AACA;;;;AACO,SAASA,aAAT,CAAuBC,GAAvB,EAA2BC,GAA3B,EAA+BC,IAA/B,EAAoC;AACvCC,YAAQC,GAAR,CAAY,+BAAZ;AACA,wCAAeJ,IAAIK,OAAJ,CAAY,cAAZ,CAAf,EAA4CC,IAA5C,CAAiD,UAACC,YAAD,EAAgB;AAC7D,YAAGA,aAAaC,IAAhB,EAAqB;AACjB,oCAAS,CACL,UAASC,QAAT,EAAkB;AACdC,8BAAcV,IAAIK,OAAJ,CAAY,cAAZ,CAAd,EAA2CE,aAAaC,IAAxD,EAA8DC,QAA9D;AACH,aAHI,EAGF,UAASA,QAAT,EAAkB;AACjBE,sCAAsBJ,aAAaC,IAAnC,EAAyCR,IAAIY,MAAJ,CAAWC,IAApD,EAA0DJ,QAA1D;AACH,aALI,CAAT,EAMG,UAACK,GAAD,EAAMC,MAAN,EAAe;AACd;AACA,oBAAG,CAACD,GAAJ,EAAQ;AACJ,wBAAGC,OAAO,CAAP,KAAaA,OAAO,CAAP,CAAhB,EAA0B;AACtBZ,gCAAQC,GAAR,CAAY,GAAZ;AACAH,4BAAIe,IAAJ,CAASD,OAAO,CAAP,CAAT;AACH;AACJ,iBALD,MAKO;AACHZ,4BAAQC,GAAR,CAAY,OAAZ;AACH;AACJ,aAhBD;AAiBH;AACJ,KApBD;AAqBH;;AAED;AACA,SAASM,aAAT,CAAuBO,KAAvB,EAA8BC,SAA9B,EAAyCT,QAAzC,EAAkD;AAC9CU,+BAAKC,eAAL,CAAqBH,KAArB,EAA4BX,IAA5B,CAAiC,UAACE,IAAD,EAAQ;AACrC,YAAGA,QAAM,IAAT,EAAc;AACT,gBAAGA,KAAKa,KAAL,IAAcH,SAAjB,EAA2B;AACvBT,yBAAS,IAAT,EAAe,IAAf;AACH,aAFD,MAEM;AACHA,yBAAS,IAAT,EAAe,KAAf;AACF;AACL,SAND,MAMM;AACFA,qBAAS,IAAT,EAAe,KAAf;AACH;AACJ,KAVD,EAUGa,KAVH,CAUS,UAACR,GAAD,EAAO;AACZL,iBAASK,GAAT,EAAc,IAAd;AACH,KAZD;AAcH;;AAED,SAASH,qBAAT,CAA+BU,KAA/B,EAAsCR,IAAtC,EAA4CJ,QAA5C,EAAqD;AACjDN,YAAQC,GAAR,CAAYiB,QAAM,KAAN,GAAYR,IAAxB;AACA;AACAU,gCAAWC,qBAAX,CAAiCH,KAAjC,EAAwCR,IAAxC,EAA8CP,IAA9C,CAAmD,UAACS,MAAD,EAAU;AACzDZ,gBAAQC,GAAR,CAAY,QAAZ;AACAK,iBAAS,IAAT,EAAcM,MAAd;AACH,KAHD,EAGGO,KAHH,CAGS,UAACR,GAAD,EAAO;AACZL,iBAASK,GAAT,EAAa,IAAb;AACH,KALD;AAOH","file":"pageAccessController.js","sourcesContent":["import parallel from 'async/parallel';\nimport {verifyJwtToken} from '../globalController/VerifyJWTToken'\nimport {User} from '../../models/UserManagementModels'\nimport {PageAccess} from '../../models/PageAccessModel'\nexport function getUserAccess(req,res,next){\n    console.log(\"called page access controller\")\n    verifyJwtToken(req.headers['x-auth-token']).then((decodedToken)=>{\n        if(decodedToken.user){\n            parallel([\n                function(callback){\n                    validateToken(req.headers['x-auth-token'], decodedToken.user, callback);\n                }, function(callback){\n                    findUserAccessForPage(decodedToken.user, req.params.page, callback);\n                }\n            ], (err, result)=>{\n                //check if any one is null or error, if error send bad response and if success send the required access.\n                if(!err){\n                    if(result[0] && result[1]){\n                        console.log(\"1\")\n                        res.send(result[1])\n                    }\n                } else {\n                    console.log(\"error\")\n                }\n            })\n        }\n    })\n}\n\n//Helper methods can be added for the main controller functions exposed to the API routes.\nfunction validateToken(token, userEmail, callback){\n    User.findUserByToken(token).then((user)=>{\n        if(user!=null){\n             if(user.email == userEmail){\n                 callback(null, true);\n             } else{\n                callback(null, false);\n             }\n        } else{\n            callback(null, false)\n        }  \n    }).catch((err)=>{\n        callback(err, null);\n    });\n    \n}\n\nfunction findUserAccessForPage(email, page, callback){\n    console.log(email+\" - \"+page)\n    //call the model and get the access for the page\n    PageAccess.findPageAccessForUser(email, page).then((result)=>{\n        console.log(\"result\")\n        callback(null,result);\n    }).catch((err)=>{\n        callback(err,null);\n    });\n   \n}"]}