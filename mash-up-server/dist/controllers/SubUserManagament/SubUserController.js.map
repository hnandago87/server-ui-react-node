{"version":3,"sources":["../../../src/controllers/SubUserManagament/SubUserController.js"],"names":["getProject","validateAdminRole","getProjects","addOrganization","addProject","req","res","next","params","projectId","organizationCode","then","data","hasData","status","send","catch","err","console","log","headers","role","undefined","error","organization","body","saveOrganization","query","findOne","project","organizationProjects","push","save"],"mappings":"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","file":"SubUserController.js","sourcesContent":["import {User} from '../../models/UserManagementModels';\nimport { verifyJwtToken,findProject,removeFromArray } from '../globalController/VerifyJWTToken';\nimport {Organization} from '../../models/OrganizationModal';\nimport {Project} from '../../models/ProjectModel';\nimport{Member} from '../../Models/MemberModel';\nimport {map, findIndex, without,findWhere, each} from 'underscore'\n\n\n//private methods\nexport function getProject(req,res,next){\n    Project.getProject(req.params.projectId,req.params.organizationCode).then((data)=>{\n        if(data.hasData){\n            res.status(200).send(data);\n        }else{\n            res.status(404).send({\"error\":true,\"message\":\"project not found\",\"data\":data});\n        }\n    }).catch((err)=>{\n        console.log(err)\n        res.status(404).send({\"error\":true,\"message\":\"No data found\"});\n    });\n}\n\n//public methods\nexport function validateAdminRole(req,res, next){\n    verifyJwtToken(req.headers['x-auth-token']).then((data)=>{\n        if(data.role === \"SuperAdmin\" || data.role === \"Admin\"){\n            req.organizationCode = data.organizationCode;\n            req.role = data.role;\n            next();\n        } else {\n            res.status(403).send({\"error\":true, \"message\":\"denied\"});\n        }\n    })\n}\n\nexport function getProjects(req, res, next){\n    console.log(\"calling get projects\")\n    if(req.params.organizationCode != null &&  req.params.organizationCode != undefined){\n        //Find project according to organization\n        console.log(req.params.organizationCode);\n        Organization.getProjects(req.params.organizationCode).then((data)=>{\n            res.status(200).send(data);\n        }).catch((error)=>{\n            console.log(error)\n            res.status(404).send({\"error\":true,\"message\":\"No data found\"});\n        })\n    } else{\n        //Find projects using jwt decoded value\n         Organization.getProjects(req.organizationCode).then((data)=>{\n            res.status(200).send(data);\n        }).catch((error)=>{\n            res.status(404).send({\"error\":true,\"message\":\"No data found\"});\n        })\n    }\n}\n\n//Add new organization\nexport function addOrganization(req, res, next){\n    if(req.role == \"SuperAdmin\"){\n        console.log(\"starting to create new org.....\")\n        var organization = new Organization(req.body);\n        console.log(\"model created new org.....\")\n        organization.saveOrganization().then((data)=>{\n            res.send(data);\n        }).catch((err)=>{\n            console.log(err)\n            res.status(404).send({\"error\":true,\"message\":\"Save operation failed\"});\n        });\n    } else{\n        res.status(403).send({\"error\":true,\"message\":\"Cannot process action.\"});\n    }\n}\n\n//Add new project to organization\nexport function addProject(req, res,next){\n    if(req.role == \"SuperAdmin\" || (req.role == \"Admin\" && req.organizationCode == req.query.organizationCode)){\n        Organization.findOne({\"OrganizationCode\":req.params.organizationCode}).then((data)=>{\n            var project = new Project(req.body);\n            data.organizationProjects.push(project);\n            data.save().then((data)=>{\n                res.send(data)\n            }).catch((err)=>{\n                res.send({\"error\":true,\"message\":\"Cannot process action.\"});\n            })\n        });\n    } else {\n        res.send({\"error\":true,\"message\":\"Cannot process action.\"});\n    }\n    \n}\n\n//update or delete users, change user access level\n// export function updateProject(req,res,next){\n//     console.log(req.method);\n//     switch(req.method.toString()){\n//         case \"GET\":\n//             getProject(req,res,next);\n//             break;\n//         case \"DELETE\":\n//             if(req.query.project){\n//                 Organization.update({\"OrganizationCode\":req.params.organizationCode},{\n//                     $pull:{organizationProjects:{ projectId: req.params.projectId}}\n//                 }).then((data)=>{\n//                         res.send({\"status\":\"deleted\",\"data\":req.params.projectId});\n//                     }).catch((err)=>{\n//                         console.log(err)\n//                     })\n//             } else{\n//                 console.log(\"member delete\")\n//                 Organization.findOne({\"OrganizationCode\":req.params.organizationCode}).then((data)=>{\n//                     data.organizationProjects[0][\"members\"][\"deleted\"] = true;\n//                     data.update()\n//                     .then((data)=>{\n//                         res.send({\"status\":\"deleted\",\"data\":req.params.projectId});\n//                     }).catch((err)=>{\n//                         console.log(err)\n//                     })\n//                 }).catch((err)=>{\n//                     console.log(err);\n//                     res.status(404).send({\"error\":true});\n//                 })\n//             }\n//             break;\n//         case \"PUT\":\n//             Organization.findOne({\"OrganizationCode\":req.param.OrganizationCode}).then((data)=>{\n//                 var projectIndex = findProject(data.organizationProjects,req.params.projectId,\"projectId\");\n//                 console.log(\"project index\"+projectIndex)\n//                 var memberIndex = findProject(data.organizationProjects[projectIndex].members,req.query.name,\"name\");\n//                 if(memberIndex >=0){\n//                     data[\"organizationProjects\"][projectIndex][\"members\"][memberIndex][role] = req.body.role;\n//                     data[\"organizationProjects\"][projectIndex][\"members\"][memberIndex][permission] = req.body.permission;\n//                     data.save().then((success)=>{\n//                             res.send({\"status\":\"deleted\"});\n//                         }).catch((err)=>{\n//                             console.log(err);\n//                             res.status(404).send({\"error\":true});\n//                         });\n//                 } else{\n//                     data[\"organizationProjects\"][projectIndex].members.push(new Member(Object.assign({},req.body))).save().then((success)=>{\n//                             res.send({\"status\":\"deleted\"});\n//                         }).catch((err)=>{\n//                             console.log(err);\n//                             res.status(404).send({\"error\":true});\n//                         });\n//                 }\n//             }).catch((err)=>{\n//                 console.log(err);\n//                 res.status(404).send({\"error\":true});\n//             })\n//             break;\n//         default:\n//             res.status(404).send({\"error\":true,\"message\":\"operation not supported\"});\n//     }\n// }"]}