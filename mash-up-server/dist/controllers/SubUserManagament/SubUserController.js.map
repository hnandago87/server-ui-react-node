{"version":3,"sources":["../../../src/controllers/SubUserManagament/SubUserController.js"],"names":["getProject","validateAdminRole","getProjects","addOrganization","req","res","next","Project","params","projectId","organizationCode","then","data","hasData","status","send","catch","err","console","log","addProject","role","query","project","body","save","headers","undefined","Organization","error","organization","saveOrganization"],"mappings":"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","file":"SubUserController.js","sourcesContent":["import {User} from '../../models/UserManagementModels';\nimport { verifyJwtToken,findProject,removeFromArray } from '../globalController/VerifyJWTToken';\nimport {Organization} from '../../models/OrganizationModal';\nimport {Project} from '../../models/ProjectModel';\nimport{Member} from '../../Models/MemberModel';\nimport {map, findIndex, without,findWhere, each} from 'underscore'\n\n\n//private methods\nexport function getProject(req,res,next){\n    Project.getProject(req.params.projectId,req.params.organizationCode).then((data)=>{\n        if(data.hasData){\n            res.status(200).send(data);\n        }else{\n            res.status(404).send({\"error\":true,\"message\":\"project not found\",\"data\":data});\n        }\n    }).catch((err)=>{\n        console.log(err)\n        res.status(404).send({\"error\":true,\"message\":\"No data found\"});\n    });\n}\n\nfunction addProject(req, res,next){\n    if(req.role == \"SuperAdmin\" || (req.role == \"Admin\" && req.organizationCode == req.query.organizationCode)){\n        var project = new Project(req.body);\n        project.save().then((data)=>{\n            res.send(data)\n        }).catch((err)=>{\n            res.send({\"error\":true,\"message\":\"Cannot process action.\"});\n        })\n    } else {\n        res.status(403).send({\"error\":true,\"message\":\"Cannot process action.\"});\n    }\n    \n}\n\n//public methods\nexport function validateAdminRole(req,res, next){\n    verifyJwtToken(req.headers['x-auth-token']).then((data)=>{\n        if(data.role === \"SuperAdmin\" || data.role === \"Admin\"){\n            req.organizationCode = data.organizationCode;\n            req.role = data.role;\n            next();\n        } else {\n            res.status(403).send({\"error\":true, \"message\":\"denied\"});\n        }\n    })\n}\n\nexport function getProjects(req, res, next){\n    console.log(\"calling get projects\")\n    if(req.params.organizationCode != null &&  req.params.organizationCode != undefined){\n        //Find project according to organization\n        console.log(req.params.organizationCode);\n        Organization.getProjects(req.params.organizationCode).then((data)=>{\n            res.status(200).send(data);\n        }).catch((error)=>{\n            console.log(error)\n            res.status(404).send({\"error\":true,\"message\":\"No data found\"});\n        })\n    } else{\n        //Find projects using jwt decoded value\n         Organization.getProjects(req.organizationCode).then((data)=>{\n            res.status(200).send(data);\n        }).catch((error)=>{\n            res.status(404).send({\"error\":true,\"message\":\"No data found\"});\n        })\n    }\n}\n\n//Add new organization\nexport function addOrganization(req, res, next){\n    if(req.role == \"SuperAdmin\"){\n        console.log(\"starting to create new org.....\")\n        var organization = new Organization(req.body);\n        console.log(\"model created new org.....\")\n        organization.saveOrganization().then((data)=>{\n            res.send(data);\n        }).catch((err)=>{\n            console.log(err)\n            res.status(404).send({\"error\":true,\"message\":\"Save operation failed\"});\n        });\n    } else{\n        res.status(403).send({\"error\":true,\"message\":\"Cannot process action.\"});\n    }\n}\n\n\n\n//update or delete users, change user access level\n// export function updateProject(req,res,next){\n//     console.log(req.method);\n//     switch(req.method.toString()){\n//         case \"GET\":\n//             getProject(req,res,next);\n//             break;\n//         case \"DELETE\":\n//             if(req.query.project){\n//                 Organization.update({\"OrganizationCode\":req.params.organizationCode},{\n//                     $pull:{organizationProjects:{ projectId: req.params.projectId}}\n//                 }).then((data)=>{\n//                         res.send({\"status\":\"deleted\",\"data\":req.params.projectId});\n//                     }).catch((err)=>{\n//                         console.log(err)\n//                     })\n//             } else{\n//                 console.log(\"member delete\")\n//                 Organization.findOne({\"OrganizationCode\":req.params.organizationCode}).then((data)=>{\n//                     data.organizationProjects[0][\"members\"][\"deleted\"] = true;\n//                     data.update()\n//                     .then((data)=>{\n//                         res.send({\"status\":\"deleted\",\"data\":req.params.projectId});\n//                     }).catch((err)=>{\n//                         console.log(err)\n//                     })\n//                 }).catch((err)=>{\n//                     console.log(err);\n//                     res.status(404).send({\"error\":true});\n//                 })\n//             }\n//             break;\n//         case \"PUT\":\n//             Organization.findOne({\"OrganizationCode\":req.param.OrganizationCode}).then((data)=>{\n//                 var projectIndex = findProject(data.organizationProjects,req.params.projectId,\"projectId\");\n//                 console.log(\"project index\"+projectIndex)\n//                 var memberIndex = findProject(data.organizationProjects[projectIndex].members,req.query.name,\"name\");\n//                 if(memberIndex >=0){\n//                     data[\"organizationProjects\"][projectIndex][\"members\"][memberIndex][role] = req.body.role;\n//                     data[\"organizationProjects\"][projectIndex][\"members\"][memberIndex][permission] = req.body.permission;\n//                     data.save().then((success)=>{\n//                             res.send({\"status\":\"deleted\"});\n//                         }).catch((err)=>{\n//                             console.log(err);\n//                             res.status(404).send({\"error\":true});\n//                         });\n//                 } else{\n//                     data[\"organizationProjects\"][projectIndex].members.push(new Member(Object.assign({},req.body))).save().then((success)=>{\n//                             res.send({\"status\":\"deleted\"});\n//                         }).catch((err)=>{\n//                             console.log(err);\n//                             res.status(404).send({\"error\":true});\n//                         });\n//                 }\n//             }).catch((err)=>{\n//                 console.log(err);\n//                 res.status(404).send({\"error\":true});\n//             })\n//             break;\n//         default:\n//             res.status(404).send({\"error\":true,\"message\":\"operation not supported\"});\n//     }\n// }"]}