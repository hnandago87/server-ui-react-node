{"version":3,"sources":["../../src/models/ProjectModel.js"],"names":["mongoose","require","mongooseConnection","validator","randomstring","projectSchema","Schema","_id","type","Types","ObjectId","projectName","String","required","projectId","unique","default","generate","length","charset","cost","memberCount","Number","members","ref","field","active","Boolean","startDate","Date","endDate","OrganizationCode","statics","getMembers","methods","addMembers","member","project","push","removeMembers","memberName","changeStatus","getProject","findOne","populate","then","data","virtual","localField","foreignField","justOne","autoPopulateMember","next","pre","Project","model","module","exports"],"mappings":"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","file":"ProjectModel.js","sourcesContent":["var mongoose = require('mongoose');\nvar mongooseConnection = require('../globals/MongoDbConfig');\nconst validator = require('validator');\nconst randomstring = require(\"randomstring\");\n\nvar projectSchema = new mongoose.Schema({\n    _id: {type:mongoose.Schema.Types.ObjectId},\n    projectName:{\n        type:String,\n        required:true\n    },\n    projectId:{\n        type:String,\n        unique:true,\n        default:function(){\n            return randomstring.generate({\n                length: 12,\n                charset: 'alphanumeric'\n            });\n        }\n    },\n    cost:{\n        type:String,\n        required:false\n    },\n    memberCount:{\n        type:Number,\n        required:true\n    },\n    members:[\n        {type: mongoose.Schema.Types.String, ref: 'Member', field:'memberId'}\n    ],\n    active:{\n        type:Boolean,\n        default:false\n    },\n    startDate:{\n        type:Date,\n        required:false\n    },\n    endDate:{\n        type:Date,\n        required:false\n    },\n    OrganizationCode:{\n        type:mongoose.Schema.Types.String, ref:'Organization', field:'OrganizationCode'\n    }\n});\n\nprojectSchema.statics.getMembers = function(){}\nprojectSchema.methods.addMembers = function(member){\n    var project = this;\n    project.members.push(member);\n    return project;\n}\nprojectSchema.statics.removeMembers = function(memberName){\n    var project = this;\n    delete project.members.memberName;\n}\nprojectSchema.statics.changeStatus = function(member){\n    return this;\n}\n\nprojectSchema.statics.getProject = function(projectId, OrganizationCode){\n    return this.findOne({\"projectId\":projectId,\"OrganizationCode\":OrganizationCode}).populate('member').then((data)=>{return data})\n}\n\nprojectSchema.virtual('member', {\n  ref: 'Member',\n  localField: 'Members',\n  foreignField: 'memberId',\n  justOne: true // for many-to-1 relationships\n});\n\n\nfunction autoPopulateMember(next) {\n  this.populate('Member');\n  next();\n}\n\nprojectSchema\n  .pre('findOne', autoPopulateMember)\n  .pre('find', autoPopulateMember);\nconst Project = mongoose.model('Project', projectSchema);\n\nmodule.exports = {Project,projectSchema};"]}