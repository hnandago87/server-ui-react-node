{"version":3,"sources":["../../src/models/OrganizationModal.js"],"names":["mongoose","require","mongooseConnection","validator","randomstring","Schema","OrganizationSchema","OrganizationName","type","String","required","unique","OrganizationCode","default","generate","length","charset","OrganizationProjects","Types","ref","field","admins","users","statics","getProjects","organizaionCode","console","log","findOne","then","data","methods","saveOrganization","organization","save","autoPopulateSubs","next","populate","pre","Organization","model","module","exports"],"mappings":";;AACA;;AADA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;;AAEA,IAAIC,qBAAqBD,QAAQ,0BAAR,CAAzB;AACA,IAAME,YAAYF,QAAQ,WAAR,CAAlB;AACA,IAAMG,eAAeH,QAAQ,cAAR,CAArB;AACA,IAAII,SAASL,SAASK,MAAtB;;AAEA,IAAIC,qBAAqB,IAAIN,SAASK,MAAb,CAAoB;AACzCE,sBAAiB;AACbC,cAAKC,MADQ;AAEbC,kBAAS,IAFI;AAGbC,gBAAO;AAHM,KADwB;AAMzCC,sBAAiB;AACbF,kBAAS,IADI;AAEbF,cAAKC,MAFQ;AAGbI,iBAAQT,aAAaU,QAAb,CAAsB;AAC1BC,oBAAQ,EADkB;AAE1BC,qBAAS;AAFiB,SAAtB,CAHK;AAObL,gBAAO;AAPM,KANwB;AAezCM,0BAAqB,CAAC,EAACT,MAAMR,SAASK,MAAT,CAAgBa,KAAhB,CAAsBT,MAA7B,EAAqCU,KAAK,SAA1C,EAAqDC,OAAM,WAA3D,EAAD,CAfoB;AAgBzCC,YAAO,CAAC,EAACb,MAAMR,SAASK,MAAT,CAAgBa,KAAhB,CAAsBT,MAA7B,EAAqCU,KAAK,QAA1C,EAAoDC,OAAM,UAA1D,EAAD,CAhBkC;AAiBzCE,WAAM,CAAC,EAACd,MAAMR,SAASK,MAAT,CAAgBa,KAAhB,CAAsBT,MAA7B,EAAqCU,KAAK,QAA1C,EAAoDC,OAAM,UAA1D,EAAD;AAjBmC,CAApB,CAAzB;;AAoBAd,mBAAmBiB,OAAnB,CAA2BC,WAA3B,GAAyC,UAASC,eAAT,EAAyB;AAC9DC,YAAQC,GAAR,CAAY,mCAAZ;AACA,WAAO,KAAKC,OAAL,CAAa,EAAC,oBAAmBH,eAApB,EAAb,EAAmDI,IAAnD,CAAwD,UAASC,IAAT,EAAc;AAAC,eAAOA,IAAP;AAAY,KAAnF,CAAP;AACH,CAHD;;AAKAxB,mBAAmByB,OAAnB,CAA2BC,gBAA3B,GAA8C,YAAU;AACpD,QAAIC,eAAe,IAAnB;AACA,WAAOA,aAAaC,IAAb,GAAoBL,IAApB,CAAyB,UAASC,IAAT,EAAc;AAC1C,eAAOA,IAAP;AACH,KAFM,CAAP;AAGH,CALD;;AAOA,SAASK,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5BV,YAAQC,GAAR,CAAY,sBAAZ;AACF,SAAKU,QAAL,CAAc,SAAd;AACA,SAAKA,QAAL,CAAc,QAAd;AACAD;AACD;;AAED9B,mBACGgC,GADH,CACO,SADP,EACkBH,gBADlB,EAEGG,GAFH,CAEO,MAFP,EAEeH,gBAFf;;AAIA,IAAMI,eAAevC,SAASwC,KAAT,CAAe,cAAf,EAA+BlC,kBAA/B,EAAkD,qBAAlD,CAArB;AACAmC,OAAOC,OAAP,GAAiB,EAACH,0BAAD,EAAjB","file":"OrganizationModal.js","sourcesContent":["var mongoose = require('mongoose');\nimport {map, where, find, contains, has, some} from 'underscore'\nvar mongooseConnection = require('../globals/MongoDbConfig');\nconst validator = require('validator');\nconst randomstring = require(\"randomstring\");\nvar Schema = mongoose.Schema;\n\nvar OrganizationSchema = new mongoose.Schema({\n    OrganizationName:{\n        type:String,\n        required:true,\n        unique:true\n    },\n    OrganizationCode:{\n        required:true,\n        type:String,\n        default:randomstring.generate({\n            length: 12,\n            charset: 'alphanumeric'\n        }),\n        unique:true\n    },\n    OrganizationProjects:[{type: mongoose.Schema.Types.String, ref: 'Project', field:'projectId'}],\n    admins:[{type: mongoose.Schema.Types.String, ref: 'Member', field:'memberId'}],\n    users:[{type: mongoose.Schema.Types.String, ref: 'Member', field:'memberId'}],\n});\n\nOrganizationSchema.statics.getProjects = function(organizaionCode){\n    console.log(\"calling find one for get projects\")\n    return this.findOne({\"OrganizationCode\":organizaionCode}).then(function(data){return data});\n}\n\nOrganizationSchema.methods.saveOrganization = function(){\n    var organization = this;\n    return organization.save().then(function(data){\n        return data\n    });\n}\n\nfunction autoPopulateSubs(next) {\n    console.log(\"pre populate calling\");\n  this.populate('Project');\n  this.populate('Member');\n  next();\n}\n\nOrganizationSchema\n  .pre('findOne', autoPopulateSubs)\n  .pre('find', autoPopulateSubs);\n\nconst Organization = mongoose.model('Organization', OrganizationSchema,'projectOrganization');\nmodule.exports = {Organization};"]}